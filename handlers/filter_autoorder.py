from telegram import Update
from telegram.ext import ContextTypes

async def autoorder_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    data = query.data
    user_id = query.from_user.id

    try:
        if data.startswith("autoorder_"):
            filter_id = int(data.replace("autoorder_", ""))
            async with async_session() as session:
                filt = await session.get(Filter, filter_id)
                if filt and filt.user_id == user_id:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—è auto_order
                    if not hasattr(filt, "auto_order"):
                        await query.answer("–î–∞–Ω–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ.", show_alert=True)
                        logging.error("–ü–æ–ª–µ auto_order –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ –º–æ–¥–µ–ª–∏ Filter!")
                        return

                    filt.auto_order = not bool(getattr(filt, "auto_order", False))
                    await session.commit()
                    await query.answer(
                        f"–ê–≤—Ç–æ–∑–∞–∫–∞–∑ {'–≤–∫–ª—é—á—ë–Ω' if filt.auto_order else '–≤—ã–∫–ª—é—á–µ–Ω'}!"
                    )
                    # –õ—É—á—à–µ edit_message, –∞ –Ω–µ reply_text
                    await query.message.edit_text(
                        f"üîÅ –ê–≤—Ç–æ–∑–∞–∫–∞–∑ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞ {'–≤–∫–ª—é—á—ë–Ω' if filt.auto_order else '–≤—ã–∫–ª—é—á–µ–Ω'}.",
                        parse_mode="HTML"
                    )
                else:
                    await query.answer("–û—à–∏–±–∫–∞!", show_alert=True)
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –≤ autoorder_handler: {e}")
        await query.answer("–í–Ω—É—Ç—Ä–µ–Ω–Ω—è—è –æ—à–∏–±–∫–∞.", show_alert=True)
    return
